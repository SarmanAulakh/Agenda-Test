import { Box, Container, Grid, Typography } from "@mui/material";
import TreeView from "@mui/lab/TreeView";
import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
import ChevronRightIcon from "@mui/icons-material/ChevronRight";
import TreeItem from "@mui/lab/TreeItem";
import Loader from "components/Loader";
import { AgendaContext } from "context/AgendaProvider";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useState, useEffect, useContext } from "react";
import { Meeting, Topic } from "types";

const formatTimeEstimate = (minutes: number) => {
  const hours = minutes / 60;
  const rhours = Math.floor(hours);
  const remainingMinutes = Math.round((hours - rhours) * 60);
  
  if (rhours) {
    return `${rhours} Hours and ${remainingMinutes} minutes`;
  }

  return `${remainingMinutes} minutes`;
}

const Home: NextPage = () => {
  const [topic, setTopic] = useState<Topic | null>(null);
  const [meeting, setMeeting] = useState<Meeting | null>(null);
  const [expanded, setExpanded] = useState<string[]>([]);
  const { agendaDetails } = useContext(AgendaContext);

  return (
    <Container maxWidth="xl" sx={{ height: "100%" }}>
      <Head>
        <title>Surfboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div id="blue-ellipse"/>
      <div id="purple-ellipse"/>
      <Typography variant="h2" py={2}>
        Hi, {agendaDetails?.user.name}
      </Typography>
      <Grid container py={2}>
        <Grid
          item
          sx={{
            // height: `calc(100vh - ${NAVBAR_HEIGHT}px)`,
            width: 250,
          }}
        >
          <Typography variant="h5" py={2}>
            Today&apos;s Meetings
          </Typography>
          <TreeView
            aria-label="file system navigator"
            defaultCollapseIcon={<ExpandMoreIcon />}
            defaultExpandIcon={<ChevronRightIcon />}
            expanded={expanded}
            sx={{
              height: 240,
              flexGrow: 1,
              maxWidth: 400,
              overflowY: "auto",
            }}
          >
            {Array.isArray(agendaDetails?.meetings) &&  agendaDetails?.meetings.map((meeting: Meeting) => (
              <TreeItem
                nodeId={`${meeting.id}`}
                label={meeting.name}
                key={meeting.name}
                onClick={() => {
                  setMeeting(meeting)
                  setExpanded([`${meeting.id}`])
                }}
              >
                {meeting.topics.map((topic: Topic) => (
                  <TreeItem
                    nodeId={`${topic.id}`}
                    label={topic.title}
                    key={topic.title}
                    onClick={() => setTopic(topic)}
                  />
                ))}
              </TreeItem>
            ))}
          </TreeView>
        </Grid>
        <Grid item ml={4}>
          <Typography variant="h5" py={2}>
            { meeting ? "Presenter: " + meeting?.presenter : "" }
          </Typography>
          <Image
            src={topic?.image?.src || ""}
            alt={topic?.image?.alt}
            height={200}
            width={400}
          />
          <Typography variant="h5" pt={2}>
            {topic?.title}
          </Typography>
          <Typography variant="h6" pb={2}>
            { topic ? `Estimated Time: ${formatTimeEstimate(topic.timeEstimate)}` : ""}
          </Typography>
          <Typography variant="h6">
            {topic?.description}
          </Typography>
        </Grid>
      </Grid>
    </Container>
  );
};

export default Home;
